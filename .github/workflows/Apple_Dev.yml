name: Flutter Build & Upload to TestFlight/App Store (Development)

on:
  push:
    branches:
      - Development
  workflow_dispatch:

jobs:
  build:
    name: Build & Upload iOS App
    runs-on: macos-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.24"

      - name: Cache Flutter Build Artifacts
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            build/
            ios/.symlinks
            ios/Pods
            ios/Flutter/Generated.xcconfig
            ios/Flutter/App.framework
            ios/Flutter/Flutter.framework
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-flutter-
              
      - name: Install Dependencies
        run: flutter pub get

      - name: Precompile Flutter for iOS
        run: flutter precache --ios

      - name: Reset Xcode Derived Data
        run: rm -rf ~/Library/Developer/Xcode/DerivedData

      - name: Install CocoaPods Dependencies
        run: |
          cd ios
          pod install --repo-update --verbose

      - name: Ensure Flutter Generates iOS Artifacts
        run: flutter build ios --no-codesign

      - name: Build iOS with Xcode (Faster)
        run: |
          cd ios
          xcodebuild -workspace Runner.xcworkspace \
                     -scheme Runner \
                     -sdk iphoneos \
                     -configuration Release \
                     build CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true

      - name: Install Bundler
        run: |
          cd ios
          gem install bundler
          bundle install

      - name: Install Xcode Command Line Tools
        run: |
          sudo xcode-select --reset
          sudo xcodebuild -runFirstLaunch

      - name: Debug Info.plist and Directory Structure
        run: |
          echo "Current Directory:"
          pwd
          echo "iOS Directory Structure:"
          ls -R ios
          if [ -f ios/Runner/Info.plist ]; then
            echo "✅ Info.plist found!"
          else
            echo "❌ Info.plist NOT found! Workflow will fail!"
            exit 1
          fi

      - name: Copy Apple Developer Certificates
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          mkdir -p ~/Library/Keychains/
          cp ./ios/cert.p12 ~/Library/Keychains/
          cp ./ios/cicd.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/

      - name: Upload to TestFlight
        run: |
          cd ios
          bundle exec fastlane internal_test
