name: Flutter Build & Upload to TestFlight/App Store (Development)

on:
  push:
    branches:
      - Development  # Change to your release branch
  workflow_dispatch:  # Enables manual trigger

jobs:
  build:
    name: Build & Upload iOS App
    runs-on: macos-latest  # macOS is required for iOS builds

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.24"  # Change this based on your Flutter version

      - name: Install Dependencies
        run: flutter pub get

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'  # Use a compatible version for Fastlane
          bundler-cache: true  # Caches installed gems for faster builds

      - name: Install Bundler
        run: |
          cd ios  # Ensure we are in the correct directory
          gem install bundler
          bundle install

      - name: Install Xcode Command Line Tools
        run: |
          sudo xcode-select --reset  # Reset to the default Xcode version
          sudo xcodebuild -runFirstLaunch  # Ensure Xcode is properly configured

      - name: Build iOS App
        run: flutter build ios --release --no-codesign  # Change IS_DEV_MODE to false for production

      - name: Debug Info.plist and Directory Structure
        run: |
          echo "Current Directory:"
          pwd
          echo "iOS Directory Structure:"
          ls -R ios
          if [ -f ios/Runner/Info.plist ]; then
            echo "✅ Info.plist found!"
          else
            echo "❌ Info.plist NOT found! Workflow will fail!"
            exit 1
          fi


      - name: Copy Apple Developer Certificates
        run: |
          # Create the required directories if they don't exist
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          mkdir -p ~/Library/Keychains/
      
          # Copy the files
          cp ./ios/cert.p12 ~/Library/Keychains/
          cp ./ios/cicd.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/



      - name: Upload to TestFlight (Internal Test) or App Store (Production)
        run: |
          cd ios
          bundle install
          bundle exec fastlane internal_test  # Adjust this depending on your Fastlane lane
